{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // array function should not be used here so that we can the local this\n\n\nvar addPropTypeDocumentationField = function addPropTypeDocumentationField(fieldName) {\n  return function addFieldToReactDesc(value) {\n    if (!this.reactDesc) {\n      this.reactDesc = {};\n    }\n\n    this.reactDesc[fieldName] = value;\n    return this;\n  };\n};\n\nvar documentedPropType = {\n  defaultValue: addPropTypeDocumentationField('defaultValue'),\n  description: addPropTypeDocumentationField('description'),\n  deprecated: addPropTypeDocumentationField('deprecated'),\n  format: addPropTypeDocumentationField('format')\n};\n\nvar createPropType = function createPropType(type) {\n  var propTypeObj = _extends({\n    type: type\n  }, documentedPropType);\n\n  Object.defineProperty(propTypeObj, 'isRequired', {\n    get: function getRequired() {\n      if (!this.reactDesc) {\n        this.reactDesc = {};\n      }\n\n      this.reactDesc.required = true;\n      return this;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return propTypeObj;\n};\n\nvar createPropTypeWithArgs = function createPropTypeWithArgs(type) {\n  return function (args) {\n    var propTypeObj = _extends({\n      args: args,\n      type: type\n    }, documentedPropType);\n\n    Object.defineProperty(propTypeObj, 'isRequired', {\n      get: function getRequired() {\n        if (!this.reactDesc) {\n          this.reactDesc = {};\n        }\n\n        this.reactDesc.required = true;\n        return this;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return propTypeObj;\n  };\n};\n\nvar PropTypes = {\n  custom: function custom(callback) {\n    var target = callback.bind(null);\n    target.type = 'func';\n    Object.keys(documentedPropType).forEach(function (fieldName) {\n      target[fieldName] = documentedPropType[fieldName];\n    });\n    return target;\n  }\n};\n\nfunction definePropType(type) {\n  Object.defineProperty(PropTypes, type, {\n    get: function getPropType() {\n      return createPropType(type);\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction definePropTypeWithArgs(type) {\n  Object.defineProperty(PropTypes, type, {\n    get: function getPropType() {\n      return createPropTypeWithArgs(type);\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\ndefinePropType('any');\ndefinePropType('array');\ndefinePropType('bool');\ndefinePropType('element');\ndefinePropType('func');\ndefinePropType('node');\ndefinePropType('number');\ndefinePropType('object');\ndefinePropType('symbol');\ndefinePropType('string');\ndefinePropTypeWithArgs('arrayOf');\ndefinePropTypeWithArgs('instanceOf');\ndefinePropTypeWithArgs('objectOf');\ndefinePropTypeWithArgs('oneOfType');\ndefinePropTypeWithArgs('oneOf');\ndefinePropTypeWithArgs('shape');\nexports.default = PropTypes;","map":null,"metadata":{},"sourceType":"script"}