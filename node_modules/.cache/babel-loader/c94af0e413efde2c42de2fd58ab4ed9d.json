{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withForwardRef } from '../hocs';\nimport { TableContext } from '../Table/TableContext';\nimport { StyledTableBody } from '../Table/StyledTable';\n\nvar TableBody = function TableBody(_ref) {\n  var forwardRef = _ref.forwardRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"forwardRef\"]);\n\n  return React.createElement(TableContext.Provider, {\n    value: \"body\"\n  }, React.createElement(StyledTableBody, _extends({\n    ref: forwardRef\n  }, rest)));\n};\n\nvar TableBodyDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TableBodyDoc = require('./doc').doc(TableBody);\n}\n\nvar TableBodyWrapper = compose(withForwardRef)(TableBodyDoc || TableBody);\nexport { TableBodyWrapper as TableBody };","map":null,"metadata":{},"sourceType":"module"}