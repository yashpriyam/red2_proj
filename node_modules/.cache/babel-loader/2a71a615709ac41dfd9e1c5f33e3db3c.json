{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useState } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Text } from '../Text';\nimport { withForwardRef } from '../hocs';\nimport { normalizeColor } from '../../utils';\nimport { StyledTab } from './StyledTab';\n\nvar Tab = function Tab(_ref) {\n  var active = _ref.active,\n      forwardRef = _ref.forwardRef,\n      plain = _ref.plain,\n      title = _ref.title,\n      onActivate = _ref.onActivate,\n      onMouseOver = _ref.onMouseOver,\n      onMouseOut = _ref.onMouseOut,\n      theme = _ref.theme,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"active\", \"forwardRef\", \"plain\", \"title\", \"onActivate\", \"onMouseOver\", \"onMouseOut\", \"theme\"]);\n\n  var _useState = useState(undefined),\n      over = _useState[0],\n      setOver = _useState[1];\n\n  var normalizedTitle = title;\n  var tabStyles = {};\n\n  var onMouseOverTab = function onMouseOverTab(event) {\n    setOver(true);\n\n    if (onMouseOver) {\n      onMouseOver(event);\n    }\n  };\n\n  var onMouseOutTab = function onMouseOutTab(event) {\n    setOver(undefined);\n\n    if (onMouseOut) {\n      onMouseOut(event);\n    }\n  };\n\n  var onClickTab = function onClickTab(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    onActivate();\n  };\n\n  if (!plain) {\n    if (typeof title !== 'string') {\n      normalizedTitle = title;\n    } else if (active) {\n      normalizedTitle = React.createElement(Text, theme.tab.active, title);\n    } else {\n      normalizedTitle = React.createElement(Text, {\n        color: over ? theme.tab.hover.color : theme.tab.color\n      }, title);\n    }\n\n    if (theme.tab.border) {\n      var borderColor = theme.tab.border.color || theme.global.control.border.color;\n\n      if (active) {\n        borderColor = theme.tab.border.active.color || borderColor;\n      } else if (over) {\n        borderColor = theme.tab.border.hover.color || borderColor;\n      }\n\n      borderColor = normalizeColor(borderColor, theme);\n      tabStyles.border = {\n        side: theme.tab.border.side,\n        size: theme.tab.border.size,\n        color: borderColor\n      };\n    }\n\n    tabStyles.background = active ? theme.tab.active.background || theme.tab.background : theme.tab.background;\n    tabStyles.pad = theme.tab.pad;\n    tabStyles.margin = theme.tab.margin;\n  }\n\n  return React.createElement(Button, _extends({\n    ref: forwardRef,\n    plain: true,\n    role: \"tab\",\n    \"aria-selected\": active,\n    \"aria-expanded\": active\n  }, rest, {\n    onClick: onClickTab,\n    onMouseOver: onMouseOverTab,\n    onMouseOut: onMouseOutTab,\n    onFocus: onMouseOver,\n    onBlur: onMouseOut\n  }), React.createElement(StyledTab, _extends({\n    as: Box,\n    plain: plain\n  }, tabStyles), normalizedTitle));\n};\n\nTab.defaultProps = {};\nObject.setPrototypeOf(Tab.defaultProps, defaultProps);\nvar TabDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  TabDoc = require('./doc').doc(Tab); // eslint-disable-line global-require\n}\n\nvar TabWrapper = compose(withTheme, withForwardRef)(TabDoc || Tab);\nexport { TabWrapper as Tab };","map":null,"metadata":{},"sourceType":"module"}