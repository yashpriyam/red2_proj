{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = describe;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _descToJSON = require('./descToJSON');\n\nvar _descToJSON2 = _interopRequireDefault(_descToJSON);\n\nvar _descToMarkdown = require('./descToMarkdown');\n\nvar _descToMarkdown2 = _interopRequireDefault(_descToMarkdown);\n\nvar _descToTypescript = require('./descToTypescript');\n\nvar _descToTypescript2 = _interopRequireDefault(_descToTypescript);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar convertArray = function convertArray(array) {\n  return array.map(function (type) {\n    return convertPropType(type);\n  });\n};\n\nvar convertShape = function convertShape(shape) {\n  var result = {};\n  Object.keys(shape).forEach(function (key) {\n    result[key] = convertPropType(shape[key]);\n  });\n  return result;\n};\n\nvar convertPropType = function convertPropType(propType) {\n  var result = void 0;\n\n  if (propType && propType.type) {\n    if (!_propTypes2.default[propType.type]) {\n      throw new Error('react-desc: unknown type ' + propType.type);\n    }\n\n    if (propType.args) {\n      if (propType.type === 'oneOfType' || propType.type === 'arrayOf') {\n        if (Array.isArray(propType.args)) {\n          result = _propTypes2.default[propType.type](convertArray(propType.args));\n        } else {\n          result = _propTypes2.default[propType.type](convertPropType(propType.args));\n        }\n      } else if (propType.type === 'shape') {\n        result = _propTypes2.default[propType.type](convertShape(propType.args));\n      } else {\n        result = _propTypes2.default[propType.type](propType.args);\n      }\n    } else {\n      result = _propTypes2.default[propType.type];\n    }\n  } else {\n    result = propType;\n  }\n\n  return result;\n};\n\nfunction describe(ComponentInstance) {\n  if (!ComponentInstance) {\n    throw new Error('react-desc: component is required');\n  }\n\n  var documentation = {\n    propTypes: {}\n  };\n  var DocumentedComponent = ComponentInstance;\n\n  var addDocumentationProp = function addDocumentationProp(propName) {\n    return function (value) {\n      documentation[propName] = value;\n      return DocumentedComponent;\n    };\n  };\n\n  DocumentedComponent.availableAt = addDocumentationProp('availableAt');\n  DocumentedComponent.description = addDocumentationProp('description');\n  DocumentedComponent.details = addDocumentationProp('details');\n  DocumentedComponent.deprecated = addDocumentationProp('deprecated');\n  DocumentedComponent.usage = addDocumentationProp('usage');\n  DocumentedComponent.intrinsicElement = addDocumentationProp('intrinsicElement');\n  DocumentedComponent.toJSON = _descToJSON2.default.bind(null, ComponentInstance, documentation);\n  DocumentedComponent.toTypescript = _descToTypescript2.default.bind(null, ComponentInstance, documentation);\n  DocumentedComponent.toMarkdown = _descToMarkdown2.default.bind(null, ComponentInstance, documentation);\n  Object.defineProperty(DocumentedComponent, 'propTypes', {\n    get: function get() {\n      return DocumentedComponent.propTypesValue;\n    },\n    set: function set(value) {\n      if (!DocumentedComponent.propTypesValue) {\n        DocumentedComponent.propTypesValue = {};\n      }\n\n      Object.keys(value).forEach(function (name) {\n        var propType = value[name];\n\n        if (propType.type) {\n          documentation.propTypes[name] = propType;\n          propType = convertPropType(propType);\n\n          if (value[name].reactDesc.required) {\n            propType = propType.isRequired;\n          }\n        }\n\n        DocumentedComponent.propTypesValue[name] = propType;\n        return propType;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DocumentedComponent;\n}","map":null,"metadata":{},"sourceType":"script"}