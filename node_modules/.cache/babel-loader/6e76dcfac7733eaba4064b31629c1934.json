{"ast":null,"code":"var _this = this;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { cloneElement, Children, useState } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { StyledTabPanel, StyledTabs, StyledTabsHeader } from './StyledTabs';\n\nvar Tabs = function Tabs(_ref) {\n  var children = _ref.children,\n      flex = _ref.flex,\n      _ref$justify = _ref.justify,\n      justify = _ref$justify === void 0 ? 'center' : _ref$justify,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? {\n    tabContents: 'Tab Contents'\n  } : _ref$messages,\n      theme = _ref.theme,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"flex\", \"justify\", \"messages\", \"theme\"]);\n\n  var propsActiveIndex = rest.activeIndex,\n      onActive = rest.onActive;\n\n  var _useState = useState(rest.activeIndex || 0),\n      activeIndex = _useState[0],\n      setActiveIndex = _useState[1];\n\n  if (activeIndex !== propsActiveIndex && propsActiveIndex !== undefined) {\n    setActiveIndex(propsActiveIndex);\n  }\n\n  var activateTab = function activateTab(index) {\n    if (propsActiveIndex === undefined) {\n      setActiveIndex(index);\n    }\n\n    if (onActive) {\n      onActive(index);\n    }\n  };\n  /* eslint-disable no-param-reassign */\n\n\n  delete rest.activeIndex;\n  delete rest.onActive;\n  /* eslint-enable no-param-reassign */\n\n  var activeContent;\n  var activeTitle;\n  var tabs = Children.map(children, function (tab, index) {\n    if (!tab) return undefined;\n    var tabProps = tab.props || {};\n    var isTabActive = index === activeIndex;\n\n    if (isTabActive) {\n      activeContent = tabProps.children;\n\n      if (typeof tabProps.title === 'string') {\n        activeTitle = tabProps.title;\n      } else {\n        activeTitle = index + 1;\n      }\n    }\n\n    return cloneElement(tab, {\n      active: isTabActive,\n      onActivate: function onActivate() {\n        return activateTab(index);\n      }\n    });\n  }, _this);\n  var tabContentTitle = (activeTitle || '') + \" \" + messages.tabContents;\n  return React.createElement(StyledTabs, _extends({\n    as: Box,\n    role: \"tablist\",\n    flex: flex\n  }, rest, {\n    background: theme.tabs.background\n  }), React.createElement(StyledTabsHeader, {\n    as: Box,\n    direction: \"row\",\n    justify: justify,\n    flex: false,\n    wrap: true,\n    background: theme.tabs.header.background,\n    gap: theme.tabs.gap\n  }, tabs), React.createElement(StyledTabPanel, {\n    flex: flex,\n    \"aria-label\": tabContentTitle,\n    role: \"tabpanel\"\n  }, activeContent));\n};\n\nTabs.defaultProps = {};\nObject.setPrototypeOf(Tabs.defaultProps, defaultProps);\nvar TabsDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  TabsDoc = require('./doc').doc(Tabs); // eslint-disable-line global-require\n}\n\nvar TabsWrapper = compose(withTheme)(TabsDoc || Tabs);\nexport { TabsWrapper as Tabs };","map":null,"metadata":{},"sourceType":"module"}