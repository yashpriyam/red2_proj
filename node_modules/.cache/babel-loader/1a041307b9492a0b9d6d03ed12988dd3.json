{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { TableCell } from '../TableCell';\nimport { Text } from '../Text';\nimport { Resizer } from './Resizer';\nimport { Searcher } from './Searcher';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableHeader, StyledDataTableRow } from './StyledDataTable';\n\nvar Header = function Header(_ref) {\n  var background = _ref.background,\n      border = _ref.border,\n      columns = _ref.columns,\n      filtering = _ref.filtering,\n      filters = _ref.filters,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      onFilter = _ref.onFilter,\n      onFiltering = _ref.onFiltering,\n      onResize = _ref.onResize,\n      onSort = _ref.onSort,\n      onToggle = _ref.onToggle,\n      pad = _ref.pad,\n      sort = _ref.sort,\n      theme = _ref.theme,\n      widths = _ref.widths,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"background\", \"border\", \"columns\", \"filtering\", \"filters\", \"groups\", \"groupState\", \"onFilter\", \"onFiltering\", \"onResize\", \"onSort\", \"onToggle\", \"pad\", \"sort\", \"theme\", \"widths\"]);\n\n  return React.createElement(StyledDataTableHeader, rest, React.createElement(StyledDataTableRow, null, groups && React.createElement(ExpanderCell, {\n    context: \"header\",\n    expanded: Object.keys(groupState).filter(function (k) {\n      return !groupState[k].expanded;\n    }).length === 0,\n    onToggle: onToggle\n  }), columns.map(function (_ref2) {\n    var property = _ref2.property,\n        header = _ref2.header,\n        align = _ref2.align,\n        search = _ref2.search,\n        sortable = _ref2.sortable,\n        verticalAlign = _ref2.verticalAlign;\n    var content = typeof header === 'string' ? React.createElement(Text, null, header) : header;\n\n    if (onSort && sortable !== false) {\n      var Icon = onSort && sortable !== false && sort && sort.property === property && theme.dataTable.icons[sort.ascending ? 'ascending' : 'descending'];\n      content = React.createElement(Button, {\n        plain: true,\n        fill: \"vertical\",\n        onClick: onSort(property)\n      }, React.createElement(Box, {\n        direction: \"row\",\n        align: \"center\",\n        gap: \"xsmall\"\n      }, content, Icon && React.createElement(Icon, null)));\n    }\n\n    if (search || onResize) {\n      var resizer = onResize ? React.createElement(Resizer, {\n        property: property,\n        onResize: onResize\n      }) : null;\n      var searcher = search && filters ? React.createElement(Searcher, {\n        filtering: filtering,\n        filters: filters,\n        property: property,\n        onFilter: onFilter,\n        onFiltering: onFiltering\n      }) : null;\n      content = React.createElement(Box, {\n        direction: \"row\",\n        align: \"center\",\n        justify: !align || align === 'start' ? 'between' : align,\n        gap: \"small\",\n        fill: \"vertical\",\n        style: onResize ? {\n          position: 'relative'\n        } : undefined\n      }, content, searcher && resizer ? React.createElement(Box, {\n        flex: \"shrink\",\n        direction: \"row\",\n        align: \"center\",\n        gap: \"small\"\n      }, searcher, resizer) : searcher || resizer);\n    }\n\n    return React.createElement(TableCell, {\n      key: property,\n      align: align,\n      verticalAlign: verticalAlign,\n      background: background,\n      border: border,\n      pad: pad,\n      plain: true,\n      scope: \"col\",\n      style: widths && widths[property] ? {\n        width: widths[property]\n      } : undefined\n    }, content);\n  })));\n};\n\nHeader.defaultProps = {};\nObject.setPrototypeOf(Header.defaultProps, defaultProps);\nvar HeaderWrapper = compose(withTheme)(Header);\nexport { HeaderWrapper as Header };","map":null,"metadata":{},"sourceType":"module"}