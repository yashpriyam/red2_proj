{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { connect } from 'react-redux';\nimport { toggleCategoryHidden } from './redux/categories/categories.actions';\nimport { toggleFeatureHidden } from './redux/categories/categories.actions';\nimport { toggleBrandHidden } from './redux/categories/categories.actions';\nimport './App.css';\n\nclass App extends Component {\n  constructor({\n    toggleCategoryHidden,\n    toggleFeatureHidden,\n    toggleBrandHidden\n  }) {\n    super({\n      toggleCategoryHidden,\n      toggleFeatureHidden,\n      toggleBrandHidden\n    });\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      });\n    };\n\n    this.handleCatCheckboxChange = event => {\n      this.setState({\n        catchecked: event.target.checked\n      });\n      console.log(this.state.catchecked);\n    };\n\n    this.handleFeatCheckboxChange = event => {\n      this.setState({\n        featchecked: event.target.checked\n      });\n      console.log(this.state.featchecked);\n    };\n\n    this.handleBrandCheckboxChange = event => {\n      this.setState({\n        brandchecked: event.target.checked\n      });\n      console.log(this.state.brandchecked);\n    };\n\n    this.state = {\n      items: [],\n      brands: [],\n      features: [],\n      categories: [],\n      searchField: '',\n      catchecked: false,\n      featchecked: false,\n      brandchecked: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/products').then(response => response.json()).then(users => {\n      this.setState({\n        items: users\n      });\n    });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/brands').then(response => response.json()).then(users2 => {\n      this.setState({\n        brands: users2\n      });\n    });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/features').then(response => response.json()).then(users3 => {\n      this.setState({\n        features: users3\n      });\n    });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/categories').then(response => response.json()).then(users4 => {\n      this.setState({\n        categories: users4\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          categories = _this$state.categories,\n          features = _this$state.features,\n          brands = _this$state.brands,\n          searchField = _this$state.searchField;\n    const filteredItems = items.filter(item => item.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Items\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.catchecked,\n      onClick: this.props.toggleCategoryHidden,\n      onChange: this.handleCatCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.featchecked,\n      onClick: this.props.toggleFeatureHidden,\n      onChange: this.handleFeatCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.brandchecked,\n      onClick: this.props.toggleBrandHidden,\n      onChange: this.handleBrandCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SearchBox, {\n      onSearchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      items: filteredItems,\n      categories: categories,\n      features: features,\n      brands: brands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCategoryHidden: () => dispatch(toggleCategoryHidden()),\n  toggleFeatureHidden: () => dispatch(toggleFeatureHidden()),\n  toggleBrandHidden: () => dispatch(toggleBrandHidden())\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/App.js"],"names":["React","Component","CardList","SearchBox","connect","toggleCategoryHidden","toggleFeatureHidden","toggleBrandHidden","App","constructor","onSearchChange","event","setState","searchField","target","value","handleCatCheckboxChange","catchecked","checked","console","log","state","handleFeatCheckboxChange","featchecked","handleBrandCheckboxChange","brandchecked","items","brands","features","categories","componentDidMount","fetch","then","response","json","users","users2","users3","users4","render","filteredItems","filter","item","name","toLowerCase","includes","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport CardList from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { connect } from 'react-redux';\nimport { toggleCategoryHidden } from './redux/categories/categories.actions';\nimport { toggleFeatureHidden } from './redux/categories/categories.actions';\nimport { toggleBrandHidden } from './redux/categories/categories.actions';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden }) {\n    super({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden });\n\n    this.state = {\n      items: [],\n      brands: [],\n      features: [],\n      categories: [],\n      searchField: '',\n      catchecked: false,\n      featchecked: false,\n      brandchecked: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/products')\n      .then(response => response.json())\n      .then(users => {\n        this.setState({ items: users })\n      });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/brands')\n      .then(response => response.json())\n      .then(users2 => {\n        this.setState({ brands: users2})\n      });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/features')\n      .then(response => response.json())\n      .then(users3 => {\n        this.setState({ features: users3})\n      });\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/categories')\n      .then(response => response.json())\n      .then(users4 => {this.setState({categories: users4})\n    });\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n\n  handleCatCheckboxChange = event => {\n    this.setState({catchecked: event.target.checked})\n    console.log(this.state.catchecked);\n  };\n\n  handleFeatCheckboxChange = event => {\n    this.setState({featchecked: event.target.checked})\n    console.log(this.state.featchecked);\n  };\n\n  handleBrandCheckboxChange = event => {\n    this.setState({brandchecked: event.target.checked})\n    console.log(this.state.brandchecked);\n  }\n    \n\n  render() {\n    const { items, categories, features, brands, searchField } = this.state;\n    const filteredItems = items.filter(item =>\n      item.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n\n    return (\n      <div className='App'>\n        <h1>Items</h1>\n        <input type='checkbox' checked={this.state.catchecked} onClick={this.props.toggleCategoryHidden} onChange={this.handleCatCheckboxChange}/>\n        <input type='checkbox' checked={this.state.featchecked} onClick={this.props.toggleFeatureHidden} onChange={this.handleFeatCheckboxChange}/>\n        <input type='checkbox' checked={this.state.brandchecked} onClick={this.props.toggleBrandHidden} onChange={this.handleBrandCheckboxChange}/>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList items={filteredItems} categories={categories} features={features} brands={brands}/>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCategoryHidden: () => dispatch(toggleCategoryHidden()),\n  toggleFeatureHidden: () => dispatch(toggleFeatureHidden()),\n  toggleBrandHidden: () => dispatch(toggleBrandHidden())\n})\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}