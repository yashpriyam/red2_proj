{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\nimport { ItemCard } from '../item-card/item-card.component';\nimport './card-list.styles.css';\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          allitems = _this$props.allitems,\n          itemhidden = _this$props.itemhidden,\n          cathidden = _this$props.cathidden,\n          feathidden = _this$props.feathidden,\n          brandhidden = _this$props.brandhidden;\n\n    if (itemhidden && cathidden && feathidden && brandhidden) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, allitems.map(item => /*#__PURE__*/React.createElement(Card, {\n        key: item.id,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      itemhidden ? null : this.props.items.map(prod => /*#__PURE__*/React.createElement(ItemCard, {\n        key: prod.id,\n        prod: prod,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n      cathidden ? null : this.props.categories.map(cat => /*#__PURE__*/React.createElement(CatCard, {\n        key: cat.id,\n        cat: cat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n      feathidden ? null : this.props.features.map(feat => /*#__PURE__*/React.createElement(FeatCard, {\n        key: feat.id,\n        feat: feat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n      brandhidden ? null : this.props.brands.map(brand => /*#__PURE__*/React.createElement(BrandCard, {\n        key: brand.id,\n        brand: brand,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n}\n\nconst mapStateToprops = ({\n  category: {\n    itemhidden,\n    cathidden,\n    brandhidden,\n    feathidden\n  }\n}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nexport default connect(mapStateToprops)(CardList);","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx"],"names":["React","connect","Card","CatCard","FeatCard","BrandCard","ItemCard","CardList","Component","constructor","props","console","log","render","allitems","itemhidden","cathidden","feathidden","brandhidden","map","item","id","items","prod","categories","cat","features","feat","brands","brand","mapStateToprops","category"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\nimport { ItemCard } from '../item-card/item-card.component';\n\nimport './card-list.styles.css';\n\nclass CardList extends React.Component {\n  constructor(props){\n    super(props);\n    console.log(this.props);\n  }\n  render() {\n    const { allitems,itemhidden,cathidden,feathidden,brandhidden } = this.props;\n    if (itemhidden && cathidden && feathidden && brandhidden) {\n      return (\n        <div className='card-list'>\n          {allitems.map(item => (\n            <Card key={item.id} item={item}/>\n          ))}\n        </div>\n      );\n    } else {\n      itemhidden ? null : this.props.items.map(prod => (\n        <ItemCard key={prod.id} prod={prod}/>\n      ))\n      \n      cathidden ? null : this.props.categories.map(cat => (\n        <CatCard key={cat.id} cat={cat}/>\n      ))\n\n      feathidden ? null : this.props.features.map(feat => (\n        <FeatCard key={feat.id} feat={feat}/>\n      ))\n\n      brandhidden ? null : this.props.brands.map(brand => (\n        <BrandCard key={brand.id} brand={brand}/>\n      ))\n    }\n    \n\n        \n     \n  }\n}\n\nconst mapStateToprops = ({category : { itemhidden,cathidden,brandhidden,feathidden }}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nexport default connect(mapStateToprops)(CardList);"]},"metadata":{},"sourceType":"module"}