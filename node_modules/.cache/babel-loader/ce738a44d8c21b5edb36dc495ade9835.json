{"ast":null,"code":"import React, { cloneElement, useRef, useState } from 'react';\nimport { Box } from '../Box';\nimport { Heading } from '../Heading';\nimport { Layer } from '../Layer';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && layerNode.layerContainer && layerNode.layerContainer.contains && !layerNode.layerContainer.contains(document.activeElement)) {\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return React.createElement(Layer, {\n    id: id,\n    position: showLayer ? 'top' : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, React.createElement(Box, {\n    pad: {\n      horizontal: 'medium'\n    }\n  }, React.createElement(Heading, {\n    level: 2\n  }, messages.skipTo, \":\"), React.createElement(Box, {\n    direction: \"row\",\n    align: \"center\",\n    pad: {\n      bottom: 'medium'\n    }\n  }, children.map(function (element, index) {\n    return cloneElement(element, {\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {\n  messages: {\n    skipTo: 'Skip To'\n  }\n};\nvar SkipLinksDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  SkipLinksDoc = require('./doc').doc(SkipLinks);\n}\n\nvar SkipLinksWrapper = SkipLinksDoc || SkipLinks;\nexport { SkipLinksWrapper as SkipLinks };","map":null,"metadata":{},"sourceType":"module"}