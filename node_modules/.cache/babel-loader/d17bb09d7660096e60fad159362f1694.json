{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Anchor } from '../Anchor';\n\nvar RoutedAnchor = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(RoutedAnchor, _Component);\n\n  function RoutedAnchor() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = RoutedAnchor.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        path = _this$props.path,\n        method = _this$props.method,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"path\", \"method\"]);\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"This component will be deprecated in the upcoming releases. \\n        Please refer to https://github.com/grommet/grommet/issues/2855 \\n        for more information.\");\n    }\n\n    return React.createElement(Anchor, _extends({}, rest, {\n      href: path,\n      onClick: function onClick(event) {\n        var onClick = _this.props.onClick;\n        var router = _this.context.router;\n\n        if (event) {\n          var modifierKey = event.ctrlKey || event.metaKey; // if the user right-clicked in the Anchor we should let it go\n\n          if (modifierKey) {\n            return;\n          }\n        }\n\n        if (router) {\n          event.preventDefault();\n          (router.history || router)[method](path);\n        }\n\n        if (onClick) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          onClick.apply(void 0, [event].concat(args));\n        }\n      }\n    }));\n  };\n\n  return RoutedAnchor;\n}(Component);\n\n_defineProperty(RoutedAnchor, \"contextTypes\", {\n  router: PropTypes.shape({}).isRequired\n});\n\n_defineProperty(RoutedAnchor, \"defaultProps\", {\n  method: 'push'\n});\n\nvar RoutedAnchorDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  RoutedAnchorDoc = require('./doc').doc(RoutedAnchor);\n}\n\nvar RoutedAnchorWrapper = RoutedAnchorDoc || RoutedAnchor;\nexport { RoutedAnchorWrapper as RoutedAnchor };","map":null,"metadata":{},"sourceType":"module"}