{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../card/card.component';\nimport { allTheItems } from '../../redux/items/items.actions'; // import { CatCard } from '../cat-card/cat-card.component';\n// import { FeatCard } from '../feat-card/feat-card.component';\n// import { BrandCard } from '../brand-card/brand-card.component';\n// import { ItemCard } from '../item-card/item-card.component';\n\nimport './card-list.styles.css';\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n\n  componentDidUpdate() {\n    const _this$props = this.props,\n          allitems = _this$props.allitems,\n          allTheItems = _this$props.allTheItems;\n    allTheItems(allitems);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          allitems = _this$props2.allitems,\n          itemhidden = _this$props2.itemhidden,\n          cathidden = _this$props2.cathidden,\n          feathidden = _this$props2.feathidden,\n          brandhidden = _this$props2.brandhidden;\n\n    switch (true) {\n      case itemhidden && cathidden && feathidden && brandhidden === true:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }, allitems.map(item => /*#__PURE__*/React.createElement(Card, {\n          key: item.name,\n          item: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        })));\n\n      case !itemhidden:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, this.props.items.map(prod => /*#__PURE__*/React.createElement(Card, {\n          key: prod.name,\n          item: prod,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }\n        })));\n\n      case !cathidden:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, this.props.categories.map(cat => /*#__PURE__*/React.createElement(Card, {\n          key: cat.name,\n          item: cat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        })));\n\n      case !feathidden:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, this.props.features.map(feat => /*#__PURE__*/React.createElement(Card, {\n          key: feat.name,\n          item: feat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        })));\n\n      case !brandhidden:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, this.props.brands.map(brand => /*#__PURE__*/React.createElement(Card, {\n          key: brand.name,\n          item: brand,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        })));\n\n      default:\n        return null;\n    } // if (itemhidden && cathidden && feathidden && brandhidden) {\n    //   return (\n    //     <div className='card-list'>\n    //       {allitems.map(item => (\n    //         <Card key={item.name} item={item}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!itemhidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.items.map(prod => (\n    //         <ItemCard key={prod.name} prod={prod}/>\n    //       ))}\n    //     </div>\n    //   )\n    // } else if(!cathidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.categories.map(cat => (\n    //         <CatCard key={cat.name} cat={cat}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!feathidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.features.map(feat => (\n    //         <FeatCard key={feat.name} feat={feat}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!brandhidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.brands.map(brand => (\n    //         <BrandCard key={brand.name} brand={brand}/>\n    //       ))}\n    //     </div>\n    //   );\n    // }\n\n  }\n\n}\n\nconst mapStateToprops = ({\n  category: {\n    itemhidden,\n    cathidden,\n    brandhidden,\n    feathidden\n  }\n}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  allTheItems: allitems => dispatch(allTheItems(allitems))\n});\n\nexport default connect(mapStateToprops, mapDispatchToProps)(CardList);","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx"],"names":["React","connect","Card","allTheItems","CardList","Component","constructor","props","console","log","componentDidUpdate","allitems","render","itemhidden","cathidden","feathidden","brandhidden","map","item","name","items","prod","categories","cat","features","feat","brands","brand","mapStateToprops","category","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../card/card.component';\nimport { allTheItems } from '../../redux/items/items.actions';\n// import { CatCard } from '../cat-card/cat-card.component';\n// import { FeatCard } from '../feat-card/feat-card.component';\n// import { BrandCard } from '../brand-card/brand-card.component';\n// import { ItemCard } from '../item-card/item-card.component';\n\nimport './card-list.styles.css';\n\nclass CardList extends React.Component {\n  constructor(props){\n    super(props);\n    console.log(this.props);\n  }\n\n  componentDidUpdate(){\n    const { allitems, allTheItems } = this.props;\n    allTheItems(allitems);\n  }\n\n\n  render() {\n    const { allitems,itemhidden,cathidden,feathidden,brandhidden } = this.props;\n    switch(true){\n      case itemhidden && cathidden && feathidden && brandhidden===true:\n        return (\n          <div className='card-list'>\n            {allitems.map(item => (\n              <Card key={item.name} item={item}/>\n            ))}\n          </div>\n        );\n      case !itemhidden:\n        return (\n          <div className='card-list'>\n            {this.props.items.map(prod => (\n              <Card key={prod.name} item={prod}/>\n            ))}\n          </div>\n        );\n      case !cathidden:\n        return (\n          <div className='card-list'>\n            {this.props.categories.map(cat => (\n              <Card key={cat.name} item={cat}/>\n            ))}\n          </div>\n        );\n      case !feathidden:\n        return (\n          <div className='card-list'>\n            {this.props.features.map(feat => (\n              <Card key={feat.name} item={feat}/>\n            ))}\n          </div>\n        );\n      case !brandhidden:\n        return (\n          <div className='card-list'>\n            {this.props.brands.map(brand => (\n              <Card key={brand.name} item={brand}/>\n            ))}\n          </div>\n        );\n      default:\n        return null\n    }\n    // if (itemhidden && cathidden && feathidden && brandhidden) {\n    //   return (\n    //     <div className='card-list'>\n    //       {allitems.map(item => (\n    //         <Card key={item.name} item={item}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!itemhidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.items.map(prod => (\n    //         <ItemCard key={prod.name} prod={prod}/>\n    //       ))}\n    //     </div>\n    //   )\n    // } else if(!cathidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.categories.map(cat => (\n    //         <CatCard key={cat.name} cat={cat}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!feathidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.features.map(feat => (\n    //         <FeatCard key={feat.name} feat={feat}/>\n    //       ))}\n    //     </div>\n    //   );\n    // } else if(!brandhidden){\n    //   return (\n    //     <div className='card-list'>\n    //       {this.props.brands.map(brand => (\n    //         <BrandCard key={brand.name} brand={brand}/>\n    //       ))}\n    //     </div>\n    //   );\n    // }\n  }\n}\n\nconst mapStateToprops = ({category : { itemhidden,cathidden,brandhidden,feathidden }}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  allTheItems: allitems => dispatch(allTheItems(allitems))\n})\n\nexport default connect(mapStateToprops, mapDispatchToProps)(CardList);"]},"metadata":{},"sourceType":"module"}