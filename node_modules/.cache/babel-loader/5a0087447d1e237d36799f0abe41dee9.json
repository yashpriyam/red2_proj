{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext, useState } from 'react';\nimport { FormContext } from '../Form/FormContext';\nimport { Keyboard } from '../Keyboard';\nimport { StyledTextArea } from './StyledTextArea';\nvar TextArea = forwardRef(function (_ref, ref) {\n  var fill = _ref.fill,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"fill\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"value\"]);\n\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormC = formContext.useFormContext(name, valueProp, ''),\n      value = _formContext$useFormC[0],\n      setValue = _formContext$useFormC[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  return React.createElement(Keyboard, {\n    onEsc: function onEsc(event) {\n      // we have to stop both synthetic events and native events\n      // drop and layer should not close by pressing esc on this input\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    }\n  }, React.createElement(StyledTextArea, _extends({\n    ref: ref,\n    name: name,\n    fillArg: fill,\n    focus: focus,\n    value: value\n  }, rest, {\n    onFocus: function onFocus(event) {\n      setFocus(true);\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (_onBlur) _onBlur(event);\n    },\n    onChange: function onChange(event) {\n      setValue(event.target.value);\n      if (_onChange) _onChange(event);\n    }\n  })));\n});\nTextArea.displayName = 'TextArea';\nvar TextAreaDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextAreaDoc = require('./doc').doc(TextArea);\n}\n\nvar TextAreaWrapper = TextAreaDoc || TextArea;\nexport { TextAreaWrapper as TextArea };","map":null,"metadata":{},"sourceType":"module"}