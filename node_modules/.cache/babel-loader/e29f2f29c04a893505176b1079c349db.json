{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, genericProps, getAvailableAtBadge } from '../../utils';\nexport var themeDoc = {\n  'worldMap.color': {\n    description: 'The color for each individual dot when a color is not passed as a prop',\n    type: 'string',\n    defaultValue: 'light-3'\n  },\n  'worldMap.continent.active': {\n    description: \"The size of the visual dots belonging to a continent when the\\ncontinent is being hovered.\",\n    type: 'string',\n    defaultValue: '8px'\n  },\n  'worldMap.continent.base': {\n    description: \"The size of the visual dots belonging to a continent that is\\nnot being hovered.\",\n    type: 'string',\n    defaultValue: '6px'\n  },\n  'worldMap.hover.color': {\n    description: 'The color for an individual dot when it is being hovered',\n    type: 'string',\n    defaultValue: 'light-4'\n  },\n  'worldMap.place.active': {\n    description: \"The size of a visual dot for an individual place in the map \\nwhen it is being hovered.\",\n    type: 'string',\n    defaultValue: '20px'\n  },\n  'worldMap.place.base': {\n    description: \"The size of the visual dot representing an individual place \\nin the map when it is not being hovered.\",\n    type: 'string',\n    defaultValue: '8px'\n  },\n  'worldMap.extend': {\n    description: 'Any additional style for the WorldMap.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n};\nexport var doc = function doc(WorldMap) {\n  var DocumentedWorldMap = describe(WorldMap).availableAt(getAvailableAtBadge('WorldMap')).description('A map of the world, or a continent.').usage(\"import { WorldMap } from 'grommet';\\n<WorldMap />\").intrinsicElement('svg');\n  DocumentedWorldMap.propTypes = _extends({}, genericProps, {\n    color: colorPropType.description('Default color'),\n    continents: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.oneOf(['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })).description('Continent details.'),\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]).description('Whether the width and/or height should fill the container.'),\n    onSelectPlace: PropTypes.func.description(\"Called when the user clicks on a place.\\n        It is passed the location.\"),\n    places: PropTypes.arrayOf(PropTypes.shape({\n      color: colorPropType,\n      name: PropTypes.string,\n      // for a11y aria-label\n      location: PropTypes.arrayOf(PropTypes.number).isRequired,\n      onClick: PropTypes.func,\n      onHover: PropTypes.func\n    })).description('Place details.'),\n    hoverColor: colorPropType.description('Color when hovering over places while selecting.')\n  });\n  return DocumentedWorldMap;\n};","map":null,"metadata":{},"sourceType":"module"}