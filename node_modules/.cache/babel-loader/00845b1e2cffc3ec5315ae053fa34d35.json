{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\nimport './card-list.styles.css';\n\nconst CardList = props => (console.log(props), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card-list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, props.items.map(item => /*#__PURE__*/React.createElement(Card, {\n  key: item.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n})), props.cathidden ? null : props.categories.map(cat => /*#__PURE__*/React.createElement(CatCard, {\n  key: cat.id,\n  cat: cat,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n})), props.feathidden ? null : props.features.map(feat => /*#__PURE__*/React.createElement(FeatCard, {\n  key: feat.id,\n  feat: feat,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n})), props.brandhidden ? null : props.brands.map(brand => /*#__PURE__*/React.createElement(BrandCard, {\n  key: brand.id,\n  brand: brand,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}))));\n\nconst mapStateToProps = ({\n  category: {\n    cathidden\n  },\n  brands: {\n    brandhidden\n  },\n  features: {\n    feathidden\n  }\n}) => ({\n  cathidden,\n  feathidden,\n  brandhidden\n});\n\nexport default connect(mapStateToProps)(CardList);","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx"],"names":["React","connect","Card","CatCard","FeatCard","BrandCard","CardList","props","console","log","items","map","item","id","cathidden","categories","cat","feathidden","features","feat","brandhidden","brands","brand","mapStateToProps","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAEA,OAAO,wBAAP;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KACpBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,gBACA;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACnB,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,EAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,EAKEL,KAAK,CAACO,SAAN,GAAkB,IAAlB,GAAyBP,KAAK,CAACQ,UAAN,CAAiBJ,GAAjB,CAAqBK,GAAG,iBAC/C,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAEA,GAAG,CAACH,EAAlB;AAAsB,EAAA,GAAG,EAAEG,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADuB,CAL3B,EAQGT,KAAK,CAACU,UAAN,GAAmB,IAAnB,GAA0BV,KAAK,CAACW,QAAN,CAAeP,GAAf,CAAmBQ,IAAI,iBAChD,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACN,EAApB;AAAwB,EAAA,IAAI,EAAEM,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADyB,CAR7B,EAWGZ,KAAK,CAACa,WAAN,GAAoB,IAApB,GAA2Bb,KAAK,CAACc,MAAN,CAAaV,GAAb,CAAiBW,KAAK,iBAChD,oBAAC,SAAD;AAAW,EAAA,GAAG,EAAEA,KAAK,CAACT,EAAtB;AAA0B,EAAA,KAAK,EAAES,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD0B,CAX9B,CAFoB,CAAtB;;AAmBA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAG;AAAEV,IAAAA;AAAF,GAAZ;AAA2BO,EAAAA,MAAM,EAAE;AAAED,IAAAA;AAAF,GAAnC;AAAoDF,EAAAA,QAAQ,EAAE;AAAED,IAAAA;AAAF;AAA9D,CAAD,MAAoF;AAC1GH,EAAAA,SAD0G;AAE1GG,EAAAA,UAF0G;AAG1GG,EAAAA;AAH0G,CAApF,CAAxB;;AAMA,eAAenB,OAAO,CAACsB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\n\nimport './card-list.styles.css';\n\nconst CardList = props => (\n  console.log(props),\n  <div className='card-list'>\n    {props.items.map(item => (\n      <Card key={item.id} item={item}/>\n    ))}\n    {\n    props.cathidden ? null : props.categories.map(cat => (\n      <CatCard key={cat.id} cat={cat}/>\n    ))}\n    {props.feathidden ? null : props.features.map(feat => (\n      <FeatCard key={feat.id} feat={feat}/>\n    ))}\n    {props.brandhidden ? null : props.brands.map(brand => (\n      <BrandCard key={brand.id} brand={brand}/>\n    ))}\n  </div>\n);\n\nconst mapStateToProps = ({category : { cathidden }, brands: { brandhidden }, features: { feathidden }}) => ({\n  cathidden,\n  feathidden,\n  brandhidden\n});\n\nexport default connect(mapStateToProps)(CardList);"]},"metadata":{},"sourceType":"module"}