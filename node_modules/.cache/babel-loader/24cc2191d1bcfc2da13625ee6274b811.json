{"ast":null,"code":"export var themeDocUtils = {\n  // 'The possible breakpoints that could affect border, direction, gap,\n  // margin, pad, and round.',\n  breakpointStyle: function breakpointStyle(description) {\n    return {\n      'global.breakpoints': {\n        description: description,\n        type: 'object',\n        defaultValue: \"{\\n    small: {\\n      value: '768px',\\n      borderSize: {\\n        xsmall: '1px',\\n        small: '2px',\\n        medium: '4px',\\n        large: '6px',\\n        xlarge: '12px',\\n      },\\n      edgeSize: {\\n        none: '0px',\\n        hair: '1px',\\n        xxsmall: '2px',\\n        xsmall: '3px',\\n        small: '6px',\\n        medium: '12px',\\n        large: '24px',\\n        xlarge: '48px',\\n      },\\n      size: {\\n        xxsmall: '24px',\\n        xsmall: '48px',\\n        small: '96px',\\n        medium: '192px',\\n        large: '384px',\\n        xlarge: '768px',\\n        full: '100%',\\n      },\\n    },\\n    medium: {\\n      value: '1536px',\\n    },\\n    large: {},\\n  }\"\n      }\n    };\n  },\n  disabledStyle: {\n    'global.control.disabled.opacity': {\n      description: 'The opacity when a component is disabled.',\n      type: 'number',\n      defaultValue: 0.3\n    }\n  },\n  edgeStyle: function edgeStyle(description) {\n    return {\n      'global.edgeSize': {\n        description: description,\n        type: 'object',\n        defaultValue: \"{\\n    edgeSize: {\\n      none: '0px',\\n      hair: '1px',\\n      xxsmall: '3px',\\n      xsmall: '6px',\\n      small: '12px',\\n      medium: '24px',\\n      large: '48px',\\n      xlarge: '96px',\\n      responsiveBreakpoint: 'small',\\n    },\\n  }\"\n      }\n    };\n  },\n  focusStyle: {\n    'global.focus.border.color': {\n      description: 'The color around the component when in focus.',\n      type: 'string | { dark: string, light: string }',\n      defaultValue: 'focus'\n    }\n  },\n  iconColor: {\n    'global.colors.icon': {\n      description: 'The color of a given icon.',\n      type: 'string | { dark: string, light: string }',\n      defaultValue: '{ dark: #f8f8f8, light: #666666 }'\n    }\n  },\n  inputStyle: {\n    'global.input.weight': {\n      description: 'The font weight of the text entered.',\n      type: 'number',\n      defaultValue: 600\n    },\n    'global.input.padding': {\n      description: 'The padding of the text.',\n      type: 'string',\n      defaultValue: '12px'\n    }\n  },\n  placeholderStyle: {\n    'global.colors.placeholder': {\n      description: 'The placeholder color used for the component.',\n      type: 'string',\n      defaultValue: '#AAAAAA'\n    }\n  },\n  responsiveBreakpoint: function responsiveBreakpoint(description) {\n    return {\n      'global.edgeSize.responsiveBreakpoint': {\n        description: description,\n        type: 'string',\n        defaultValue: 'small'\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}