{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/App.js\";\nimport React, { Component } from 'react'; // import CardList from './components/card-list/card-list.component';\n// import { SearchBox } from './components/search-box/search-box.component';\n// import { connect } from 'react-redux';\n\nimport { Switch, Route } from 'react-router-dom'; // import { toggleCategoryHidden } from './redux/categories/categories.actions';\n// import { toggleFeatureHidden } from './redux/categories/categories.actions';\n// import { toggleBrandHidden } from './redux/categories/categories.actions';\n// import { toggleItemHidden } from './redux/categories/categories.actions';\n\nimport { ProdInfo } from './components/prod-info/prod-info.component';\nimport HomePage from './components/homepage/homepage';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: []\n    };\n  } // constructor({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden,toggleItemHidden }) {\n  // super({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden,toggleItemHidden });\n  //   this.state = {\n  //     items: [],\n  //     brands: [],\n  //     features: [],\n  //     categories: [],\n  //     searchField: '',\n  //     catchecked: false,\n  //     featchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false\n  //   };\n  // }\n\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/products').then(response => response.json()).then(users => {\n      this.setState({\n        items: users\n      });\n    });\n  } //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/brands')\n  //     .then(response => response.json())\n  //     .then(users2 => {\n  //       this.setState({ brands: users2})\n  //     });\n  //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/features')\n  //     .then(response => response.json())\n  //     .then(users3 => {\n  //       this.setState({ features: users3})\n  //     });\n  //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/categories')\n  //     .then(response => response.json())\n  //     .then(users4 => {\n  //       this.setState({categories: users4})\n  //   });\n  // }\n  // onSearchChange = event => {\n  //   this.setState({ searchField: event.target.value });\n  // };\n  // handleItemCheckboxChange = event => {\n  //   this.setState({itemchecked: event.target.checked,\n  //     catchecked: false,\n  //     featchecked: false,\n  //     brandchecked: false})\n  //   console.log(this.state.itemchecked);\n  // };\n  // handleCatCheckboxChange = event => {\n  //   this.setState({catchecked: event.target.checked,\n  //     featchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.catchecked);\n  // };\n  // handleFeatCheckboxChange = event => {\n  //   this.setState({featchecked: event.target.checked,\n  //     catchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.featchecked);\n  // };\n  // handleBrandCheckboxChange = event => {\n  //   this.setState({brandchecked: event.target.checked,\n  //     catchecked: false,\n  //     featchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.brandchecked);\n  // }\n\n\n  render() {\n    // const { items, categories, features, brands, searchField } = this.state;\n    const allItems = items.concat(categories, features, brands);\n    console.log(allItems); // const allFilter = allItems.filter(each => \n    //   each.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredItems = items.filter(item =>\n    //   item.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredCategories = categories.filter(category =>\n    //   category.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredFeatures = features.filter(feature =>\n    //   feature.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredBrands = brands.filter(brand =>\n    //   brand.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), allItems.map(item => /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\".concat(item.name),\n      component: ProdInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} // const mapDispatchToProps = dispatch => ({\n//   toggleCategoryHidden: () => dispatch(toggleCategoryHidden()),\n//   toggleFeatureHidden: () => dispatch(toggleFeatureHidden()),\n//   toggleBrandHidden: () => dispatch(toggleBrandHidden()),\n//   toggleItemHidden: () => dispatch(toggleItemHidden())\n// })\n// export default connect(null, mapDispatchToProps)(App);\n\n\nexport default App;","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/App.js"],"names":["React","Component","Switch","Route","ProdInfo","HomePage","App","constructor","state","items","componentDidMount","fetch","then","response","json","users","setState","render","allItems","concat","categories","features","brands","console","log","map","item","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B,C,CACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD,GANyB,CAO1B;AACE;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,uEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AACb,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACD,KAJH;AAKD,GA7ByB,CA8B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAE,EAAAA,MAAM,GAAG;AACP;AAEA,UAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAaC,UAAb,EAAwBC,QAAxB,EAAiCC,MAAjC,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAJO,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAGb,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEGa,QAAQ,CAACO,GAAT,CAAaC,IAAI,iBAChB,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,aAAMA,IAAI,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAGvB,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CAZF,CADF;AAqBD;;AAjIyB,C,CAqI5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\n\n// import CardList from './components/card-list/card-list.component';\n// import { SearchBox } from './components/search-box/search-box.component';\n// import { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n// import { toggleCategoryHidden } from './redux/categories/categories.actions';\n// import { toggleFeatureHidden } from './redux/categories/categories.actions';\n// import { toggleBrandHidden } from './redux/categories/categories.actions';\n// import { toggleItemHidden } from './redux/categories/categories.actions';\nimport { ProdInfo } from './components/prod-info/prod-info.component';\nimport HomePage from './components/homepage/homepage';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      items: []\n    }\n  }\n  // constructor({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden,toggleItemHidden }) {\n    // super({ toggleCategoryHidden,toggleFeatureHidden,toggleBrandHidden,toggleItemHidden });\n\n  //   this.state = {\n  //     items: [],\n  //     brands: [],\n  //     features: [],\n  //     categories: [],\n  //     searchField: '',\n  //     catchecked: false,\n  //     featchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false\n  //   };\n  // }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/products')\n      .then(response => response.json())\n      .then(users => {\n        this.setState({ items: users })\n      });\n  }\n  //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/brands')\n  //     .then(response => response.json())\n  //     .then(users2 => {\n  //       this.setState({ brands: users2})\n  //     });\n  //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/features')\n  //     .then(response => response.json())\n  //     .then(users3 => {\n  //       this.setState({ features: users3})\n  //     });\n  //   fetch('https://my-json-server.typicode.com/banshilaldangi/ecommerce/categories')\n  //     .then(response => response.json())\n  //     .then(users4 => {\n  //       this.setState({categories: users4})\n  //   });\n  // }\n\n  // onSearchChange = event => {\n  //   this.setState({ searchField: event.target.value });\n  // };\n\n  \n  // handleItemCheckboxChange = event => {\n  //   this.setState({itemchecked: event.target.checked,\n  //     catchecked: false,\n  //     featchecked: false,\n  //     brandchecked: false})\n  //   console.log(this.state.itemchecked);\n  // };\n\n  // handleCatCheckboxChange = event => {\n  //   this.setState({catchecked: event.target.checked,\n  //     featchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.catchecked);\n  // };\n\n  // handleFeatCheckboxChange = event => {\n  //   this.setState({featchecked: event.target.checked,\n  //     catchecked: false,\n  //     brandchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.featchecked);\n  // };\n\n  // handleBrandCheckboxChange = event => {\n  //   this.setState({brandchecked: event.target.checked,\n  //     catchecked: false,\n  //     featchecked: false,\n  //     itemchecked: false})\n  //   console.log(this.state.brandchecked);\n  // }\n    \n\n  render() {\n    // const { items, categories, features, brands, searchField } = this.state;\n\n    const allItems = items.concat(categories,features,brands);\n    console.log(allItems)\n\n    // const allFilter = allItems.filter(each => \n    //   each.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredItems = items.filter(item =>\n    //   item.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredCategories = categories.filter(category =>\n    //   category.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredFeatures = features.filter(feature =>\n    //   feature.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n    // const filteredBrands = brands.filter(brand =>\n    //   brand.name.toLowerCase().includes(searchField.toLowerCase())\n    // );\n\n\n    return (\n      <div className='App'>\n        {/* <h1>Items</h1>\n        <input type='checkbox' checked={this.state.itemchecked} onClick={this.props.toggleItemHidden} onChange={this.handleItemCheckboxChange}/>\n        <label>Products</label>\n        <input type='checkbox' checked={this.state.catchecked} onClick={this.props.toggleCategoryHidden} onChange={this.handleCatCheckboxChange}/>\n        <label>Category</label>\n        <input type='checkbox' checked={this.state.featchecked} onClick={this.props.toggleFeatureHidden} onChange={this.handleFeatCheckboxChange}/>\n        <label>Feature</label>\n        <input type='checkbox' checked={this.state.brandchecked} onClick={this.props.toggleBrandHidden} onChange={this.handleBrandCheckboxChange}/>\n        <label>Brands</label>\n        <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList items={filteredItems} categories={filteredCategories} features={filteredFeatures} brands={filteredBrands} allitems={allFilter}/> */}\n        <Switch>\n            <Route exact path='/' component={ HomePage }></Route>\n          {allItems.map(item => \n            <Route exact path={`/${item.name}`} component={ ProdInfo }></Route>\n          )}\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\n// const mapDispatchToProps = dispatch => ({\n//   toggleCategoryHidden: () => dispatch(toggleCategoryHidden()),\n//   toggleFeatureHidden: () => dispatch(toggleFeatureHidden()),\n//   toggleBrandHidden: () => dispatch(toggleBrandHidden()),\n//   toggleItemHidden: () => dispatch(toggleItemHidden())\n// })\n// export default connect(null, mapDispatchToProps)(App);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}