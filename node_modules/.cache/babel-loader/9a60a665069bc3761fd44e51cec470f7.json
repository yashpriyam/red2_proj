{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, getAvailableAtBadge, genericProps, themeDocUtils } from '../../utils';\nexport var doc = function doc(Paragraph) {\n  var DocumentedParagraph = describe(Paragraph).availableAt(getAvailableAtBadge('Paragraph')).description('A paragraph of text.').usage(\"import { Paragraph } from 'grommet';\\n<Paragraph />\").intrinsicElement('p');\n  DocumentedParagraph.propTypes = _extends({}, genericProps, {\n    color: colorPropType.description('A color identifier to use for the text color.'),\n    fill: PropTypes.bool.description('Whether the width should fill the container.').defaultValue(false),\n    responsive: PropTypes.bool.description(\"Whether margin should be scaled for mobile environments.\").defaultValue(true),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge', 'xxlarge']), PropTypes.string]).description('The size of the Paragraph text.').defaultValue('medium'),\n    textAlign: PropTypes.oneOf(['start', 'center', 'end']).description('How to align the text inside the paragraph.').defaultValue('start')\n  });\n  return DocumentedParagraph;\n};\nexport var themeDoc = _extends({\n  paragraph: {\n    description: \"The possible sizes of the paragraph in terms of its max-width,\\n     font-size and line-height.\",\n    type: 'object',\n    defaultValue: \"{\\n      small: {\\n        size: '14px',\\n        height: '20px',\\n        maxWidth: '336px',\\n       },\\n      medium: {\\n        size: '18px',\\n        height: '24px',\\n        maxWidth: '432px',\\n      },\\n      large: {\\n        size: '22px',\\n        height: '28px',\\n        maxWidth: '528px',\\n      },\\n      xlarge: {\\n        size: '26px',\\n        height: '32px',\\n        maxWidth: '624px',\\n      },\\n      xxlarge: {\\n        size: '34px',\\n        height: '40px',\\n        maxWidth: '816px',\\n      },\\n    }\"\n  },\n  'paragraph.textAlign': {\n    description: \"How to align the text inside the Paragraph.\",\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'paragraph.extend': {\n    description: 'Any additional style for the Paragraph.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n}, themeDocUtils.edgeStyle('The possible sizes for margin.'));","map":null,"metadata":{},"sourceType":"module"}