{"ast":null,"code":"var _jsxFileName = \"/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\nimport './card-list.styles.css';\n\nconst CardList = props => (console.log(props), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card-list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, props.allitems.map(item => /*#__PURE__*/React.createElement(Card, {\n  key: item.id,\n  item: item,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n})), props.itemhidden ? null : props.items.map(prod => /*#__PURE__*/React.createElement(Card, {\n  key: prod.id,\n  prod: prod,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n})), props.cathidden ? null : props.categories.map(cat => /*#__PURE__*/React.createElement(CatCard, {\n  key: cat.id,\n  cat: cat,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n})), props.feathidden ? null : props.features.map(feat => /*#__PURE__*/React.createElement(FeatCard, {\n  key: feat.id,\n  feat: feat,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n})), props.brandhidden ? null : props.brands.map(brand => /*#__PURE__*/React.createElement(BrandCard, {\n  key: brand.id,\n  brand: brand,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}))));\n\nconst mapStateToProps = ({\n  category: {\n    itemhidden,\n    cathidden,\n    brandhidden,\n    feathidden\n  }\n}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nexport default connect(mapStateToProps)(CardList);","map":{"version":3,"sources":["/Users/yashpriyam/Downloads/red_baton_task/src/components/card-list/card-list.component.jsx"],"names":["React","connect","Card","CatCard","FeatCard","BrandCard","CardList","props","console","log","allitems","map","item","id","itemhidden","items","prod","cathidden","categories","cat","feathidden","features","feat","brandhidden","brands","brand","mapStateToProps","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAEA,OAAO,wBAAP;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KACpBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,gBACA;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmBC,IAAI,iBACtB,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,EAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,EAKEL,KAAK,CAACO,UAAN,GAAmB,IAAnB,GAA0BP,KAAK,CAACQ,KAAN,CAAYJ,GAAZ,CAAgBK,IAAI,iBAC5C,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACH,EAAhB;AAAoB,EAAA,IAAI,EAAEG,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADwB,CAL5B,EASET,KAAK,CAACU,SAAN,GAAkB,IAAlB,GAAyBV,KAAK,CAACW,UAAN,CAAiBP,GAAjB,CAAqBQ,GAAG,iBAC/C,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAEA,GAAG,CAACN,EAAlB;AAAsB,EAAA,GAAG,EAAEM,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADuB,CAT3B,EAYGZ,KAAK,CAACa,UAAN,GAAmB,IAAnB,GAA0Bb,KAAK,CAACc,QAAN,CAAeV,GAAf,CAAmBW,IAAI,iBAChD,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACT,EAApB;AAAwB,EAAA,IAAI,EAAES,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADyB,CAZ7B,EAeGf,KAAK,CAACgB,WAAN,GAAoB,IAApB,GAA2BhB,KAAK,CAACiB,MAAN,CAAab,GAAb,CAAiBc,KAAK,iBAChD,oBAAC,SAAD;AAAW,EAAA,GAAG,EAAEA,KAAK,CAACZ,EAAtB;AAA0B,EAAA,KAAK,EAAEY,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD0B,CAf9B,CAFoB,CAAtB;;AAuBA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAG;AAAEb,IAAAA,UAAF;AAAaG,IAAAA,SAAb;AAAuBM,IAAAA,WAAvB;AAAmCH,IAAAA;AAAnC;AAAZ,CAAD,MAAmE;AACzFH,EAAAA,SADyF;AAEzFG,EAAAA,UAFyF;AAGzFG,EAAAA,WAHyF;AAIzFT,EAAAA;AAJyF,CAAnE,CAAxB;;AAOA,eAAeb,OAAO,CAACyB,eAAD,CAAP,CAAyBpB,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card } from '../card/card.component';\nimport { CatCard } from '../cat-card/cat-card.component';\nimport { FeatCard } from '../feat-card/feat-card.component';\nimport { BrandCard } from '../brand-card/brand-card.component';\n\nimport './card-list.styles.css';\n\nconst CardList = props => (\n  console.log(props),\n  <div className='card-list'>\n    {props.allitems.map(item => (\n      <Card key={item.id} item={item}/>\n    ))}\n    {\n    props.itemhidden ? null : props.items.map(prod => (\n      <Card key={prod.id} prod={prod}/>\n    ))}\n    {\n    props.cathidden ? null : props.categories.map(cat => (\n      <CatCard key={cat.id} cat={cat}/>\n    ))}\n    {props.feathidden ? null : props.features.map(feat => (\n      <FeatCard key={feat.id} feat={feat}/>\n    ))}\n    {props.brandhidden ? null : props.brands.map(brand => (\n      <BrandCard key={brand.id} brand={brand}/>\n    ))}\n  </div>\n);\n\nconst mapStateToProps = ({category : { itemhidden,cathidden,brandhidden,feathidden }}) => ({\n  cathidden,\n  feathidden,\n  brandhidden,\n  itemhidden\n});\n\nexport default connect(mapStateToProps)(CardList);"]},"metadata":{},"sourceType":"module"}